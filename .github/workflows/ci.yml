name: Symfony Tests
on:
  push:
    branches:
      - main

jobs:
  symfony:
    name: Symfony (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-22.04

    services:
      mysql:
        image: mariadb:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
        working-directory: ./back

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
        working-directory: ./back

      - name: Check the Symfony console
        working-directory: ./back
        run: |
          php bin/console -V
          php bin/console about

      - name: Run Migration
        run: |
          composer require --dev symfony/orm-pack
          php bin/console --env=test doctrine:schema:update --force || echo "No migrations found or schema update failed"
          php bin/console --env=test doctrine:migrations:migrate || echo "No migrations found or migration failed"
        working-directory: ./back
        env:
          DATABASE_URL: mysql://root:password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/test

      - name: Install PHPUnit
        run: simple-phpunit install
        working-directory: ./back

      - name: Run tests
        run: simple-phpunit --coverage-text
        working-directory: ./back