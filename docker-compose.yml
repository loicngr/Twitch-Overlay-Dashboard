version: "3.8"

networks:
  caddy:
    external: true

volumes:
  php_socket:
  caddy_srv:
    external: true
  caddy_data:
  caddy_config:

services:
  database:
    image: mariadb:10.6.12
    container_name: database
    restart: unless-stopped
    command: '--default-authentication-plugin=mysql_native_password'
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: twitchOverlay
      MYSQL_PASSWORD: password

  node:
    build:
      context: ./front
      target: app_node
    restart: unless-stopped
    networks:
      - caddy
    volumes:
      - caddy_srv:/srv
    labels:
      caddy: ${CADDY_FRONT_NAME:-localhost}
      caddy.root: "* /srv/front/dist/pwa"
      caddy.encode: zstd gzip
      caddy.file_server: ""
      caddy.tls: "internal"

  php:
    build:
      context: ./back
      target: app_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-6.1}
        STABILITY: ${STABILITY:-stable}
    networks:
      - caddy
    restart: unless-stopped
    depends_on:
      - database
    volumes:
      - php_socket:/var/run/php
      - caddy_srv:/srv
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      APP_ENV: prod
      DATABASE_HOST: database
      DATABASE_USER: root
      DATABASE_PASSWORD: password
      DATABASE_NAME: twitchOverlay
      DATABASE_SERVER_VERSION: mariadb-10.6.12
    labels:
      caddy: ${CADDY_BACK_NAME:-api.localhost}
      caddy.root: "* /srv/back/public"
      caddy.encode: zstd gzip
      caddy.file_server: ""
      caddy.tls: "internal"
      caddy.php_fastcgi: unix//var/run/php/php-fpm.sock

  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    networks:
      - caddy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - caddy_data:/data
      - caddy_srv:/srv
      - caddy_config:/config